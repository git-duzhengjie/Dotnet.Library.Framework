pipeline {
  agent any
  stages {
    stage('dotnet-publish') {
      steps {
	    sh 'dotnet build   -r ${PUBLISH_RUNTMIE} -c release ${ROOT_PATH}/${PROJECT_NAME}  -o ${PUBLISH_PATH}'
      }
    }
    stage('copy dockerfile') {
      steps {
        sh 'cp ${ROOT_PATH}/${PUBLISH_PATH}/Docker/dockerfile ${ROOT_PATH}/${PUBLISH_PATH}/dockerfile'
      }
    }
    stage('docker publish') {
      steps {
        sh '''cd ${ROOT_PATH}/${PUBLISH_PATH}
        ./docker build -t .'''
      }
    }
    stage('docker push server') {
      steps {
        sh 'docker tag ${CURRENT_IMAGE_NAME} ${PUSH_ADDRESS}/${CURRENT_IMAGE_NAME}'
        sh 'docker push ${PUSH_ADDRESS}/${CURRENT_IMAGE_NAME}'
        sh '(docker rmi -f ${PUSH_ADDRESS}/${CURRENT_IMAGE_NAME})|| echo "continue execute"'
      }
    }
  }
  environment {
    PUBLISH_FRAMEWORK = 'netcoreapp2.2'
    PUBLISH_RUNTMIE = 'ubuntu.16.04-x64'
    PUBLISH_PATH = 'publish'
	VERSION=1.0
    ROOT_PATH = './Library.Framework.Web'
    PROJECT_NAME = 'Library.Framework.Web.csproj'
    CURRENT_IMAGE_NAME = 'zrb/framework-web'
    PUSH_ADDRESS='192.168.1.6:5000'
  }
}